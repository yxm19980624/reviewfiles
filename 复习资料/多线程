创建线程有哪几种方式？怎么选择？
继承thread类重写run方法
实现runnable接口重写run方法
实现callable接口重写run方法
runnable没有返回值，不能抛出异常；callable有返回值可以抛出异常，需要有返回值时选择使用。


线程的启动方式：
start方法启动子类线程，run方法是thread类中的一个普通方法，还是在主线程里执行。


线程的状态：
创建状态 就绪状态 运行状态  阻塞状态  死亡状态


怎么设置线程的优先级：
使用setPriority方法设置 默认为5 可以设置1-10 数字越大 级别越高


并发编程的三要素：
原子性 可见性  有序性


怎么实现线程的可见性：
synchronized或者Lock：保证同一个时刻只有一个线程获取锁执行代码，锁释放之前把最新的值刷新到主内存，实现可见性。


synchronized和lock和分布式锁区别
锁机制：给资源添加一个标记，表示资源是否可用。
synchronized：给对象加锁，加锁和解锁都是通过修改锁标志位的数值。
lock：在lock对象内部维护了一个变量，state等于0表示锁释放状态，大于0表示锁被占用。加锁和解锁都是通过修改state的值来实现。
分布式锁：在多个应用共享的位置放一个标志，一般是使用redis实现或zookeeper中设置一个节点，通过修改key的值或者修改节点状态来达到加锁和解锁的目的。
